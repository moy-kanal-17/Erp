import React, { useState, useEffect } from 'react';
import { useNavigate, useLocation, Outlet } from 'react-router-dom';
import { Layout, Menu, Table, Avatar, Dropdown, Typography, message } from 'antd';
import {

  UserOutlined,
  LogoutOutlined,
} from '@ant-design/icons';
import { userService } from '../../service/users.service';
import 'antd/dist/reset.css';
// import { useGroup } from '@hooks';

const { Header, Sider, Content, Footer } = Layout;
const { Title } = Typography;

// –¢–∏–ø –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
interface User {
  id: number;
  first_name: string;
  last_name: string;
  email: string;
  role: string;
}


const TeacherSpisoks: React.FC = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const [collapsed, setCollapsed] = useState(false);
  const [users, setUsers] = useState<User[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  // const {};pl
// p
  // –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  useEffect(() => {
    const fetchUsers = async () => {
      try {
        const res = await userService.geTeachers();

        console.log('kelgan res' ,res);
        
        setUsers(res?.data?.teachers); 
      } catch (err: unknown) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', err);
        setError(
          err instanceof Error && (err as any).response?.data?.message
            ? (err as any).response.data.message
            : '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!'
        );
        message.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!');
      } finally {
        setLoading(false);
      }
    };
    fetchUsers();
  }, []);

 

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
  const getSelectedKey = () => {
    const path = location.pathname;
    if (path === '/teacher') return 'dashboard';
    if (path.startsWith('/teacher/courses')) return 'courses';
    if (path.startsWith('/teacher/profile')) return 'profile';
    return 'dashboard';
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–æ–≥–∞—É—Ç–∞
  const handleLogout = () => {
    localStorage.removeItem('access_token');
    localStorage.removeItem('role');
    navigate('/login');
    message.success('‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏!');
  };

  // –î—Ä–æ–ø–¥–∞—É–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const userMenu = (
    <Menu>
      <Menu.Item key="logout" icon={<LogoutOutlined />} onClick={handleLogout}>
        –í—ã–π—Ç–∏
      </Menu.Item>
    </Menu>
  );

  // –ö–æ–ª–æ–Ω–∫–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
  const columns = [
    { title: 'ID', dataIndex: 'id', key: 'id', width: 60 },
    { title: '–ò–º—è', dataIndex: 'first_name', key: 'first_name' },
    { title: '–§–∞–º–∏–ª–∏—è', dataIndex: 'last_name', key: 'last_name' },
    { title: 'Email', dataIndex: 'email', key: 'email' },
    { title: '–†–æ–ª—å', dataIndex: 'role', key: 'role' }, // –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª—å
  ];

  return (
    <Layout style={{ minHeight: '100vh', background: '#f0f2f5' }}>
      {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å */}
      <Sider
        breakpoint="lg"
        collapsedWidth="0"
        collapsible
        collapsed={collapsed}
        onCollapse={(value) => setCollapsed(value)}
        style={{ background: '#001529', boxShadow: '2px 0 8px rgba(0, 0, 0, 0.15)' }}
      >
        <div
          style={{
            padding: '16px',
            textAlign: 'center',
            background: '#002140',
            borderBottom: '1px solid rgba(255, 255, 255, 0.1)',
          }}
        >
          <Title
            level={4}
            style={{
              color: '#fff',
              margin: 0,
              fontWeight: 'bold',
              animation: 'pulse 2s infinite',
            }}
          >
            üéì –£—á–∏—Ç–µ–ª—å
          </Title>
        </div>
        <Menu
          theme="dark"
          mode="inline"
          selectedKeys={[getSelectedKey()]}
          style={{ borderRight: 'none' }}
        />
      </Sider>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <Layout>
        {/* –•–µ–¥–µ—Ä */}
        <Header
          style={{
            background: '#fff',
            padding: '0 24px',
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center',
            boxShadow: '0 1px 4px rgba(0, 21, 41, 0.08)',
          }}
        >
          <Title level={4} style={{ margin: 0, color: '#1f1f1f' }}>
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ê–¥–º–∏–Ω!
          </Title>
          <Dropdown overlay={userMenu} trigger={['click']}>
            <span
              onMouseEnter={(e) => ((e.currentTarget as HTMLSpanElement).style.transform = 'scale(1.1)')}
              onMouseLeave={(e) => ((e.currentTarget as HTMLSpanElement).style.transform = 'scale(1)')}
              style={{ display: 'inline-block', transition: 'all 0.3s' }}
            >
              <Avatar
                size="large"
                style={{
                  backgroundColor: '#1890ff',
                  cursor: 'pointer',
                }}
                icon={<UserOutlined />}
              />
            </span>
          </Dropdown>
        </Header>


        <Content
          style={{
            margin: '24px 16px',
            padding: '24px',
            background: '#fff',
            borderRadius: '8px',
            minHeight: '500px',
            boxShadow: '0 2px 8px rgba(0, 0, 0, 0.06)',
          }}
        >
          <div className="text_and_button flex justify-between items-center mb-4">
            <h2 className="text-xl font-bold">üìã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</h2>
          </div>
          {loading ? (
            <p>–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...</p>
          ) : error ? (
            <p style={{ color: 'red' }}>{error}</p>
          ) : users.length === 0 ? (
            <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
          ) : (
            <Table
              dataSource={users}
              columns={columns}
              rowKey="id"
              bordered
              pagination={{ pageSize: 8 }}
              scroll={{ x: true }}
            />
          )}
          <Outlet />
        </Content>

        {/* –§—É—Ç–µ—Ä */}
        <Footer
          style={{
            textAlign: 'center',
            background: '#fff',
            color: '#1f1f1f',
            borderTop: '1px solid #e8e8e8',
            padding: '16px',
          }}
        >
          –ü–∞–Ω–µ–ª—å –£—á–∏—Ç–µ–ª—è ¬©{new Date().getFullYear()} by You
        </Footer>
      </Layout>
    </Layout>
  );
};

// –î–æ–±–∞–≤–∏–º CSS –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ª–æ–≥–æ—Ç–∏–ø–∞
const styles = `
  @keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
  }
`;
const styleSheet = document.createElement('style');
styleSheet.innerText = styles;
document.head.appendChild(styleSheet);

export default TeacherSpisoks;